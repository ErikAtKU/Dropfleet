<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<environment-map version="2">
  <breakpoint-list>
    <breakpoint-map comment="nothing(listSet)." filename="fleet\fleetBuilder\fleetBuilder.pro" kind="bphard" line="40" pos="16" />
    <breakpoint-map comment="end foreach." filename="fleet\fleetBuilder\fleetBuilder.pro" kind="bphard" line="19" pos="21" />
  </breakpoint-list>
  <exception-list>
    <exception-map code="prolog_exception" comment="Prolog exception" enable="true" response="continue" />
    <exception-map code="unspecified_exception" comment="Unspecified exception" enable="true" response="break" />
    <exception-map code="3765269347" comment="MS C++ exception" enable="true" response="continue" />
  </exception-list>
  <historic-map>
    <browseSearch-list>
      <browseSearch>clauses
    tonnage() = l2.</browseSearch>
    </browseSearch-list>
    <debugDir-list>
      <debugDir>deb</debugDir>
    </debugDir-list>
    <finalDir-list>
      <finalDir>exe</finalDir>
    </finalDir-list>
    <findItem-list>
      <findItem>PHR</findItem>
      <findItem>phr</findItem>
      <findItem>fleetBuilder::group</findItem>
      <findItem>tuple</findItem>
      <findItem>P</findItem>
      <findItem>phrHarpoverchargedrates</findItem>
      <findItem>, oC</findItem>
      <findItem>oC</findItem>
      <findItem>getFleetBuilderStats(shipStats_var, ShipPoints, GroupSize, Tonnage).</findItem>
      <findItem>venice_stat</findItem>
      <findItem>[out]</findItem>
      <findItem>\</findItem>
      <findItem>fighter</findItem>
      <findItem>bomber</findItem>
      <findItem>strikeCraftLaunchSystem</findItem>
      <findItem>offensiveLaunchSystem</findItem>
      <findItem>WeaponSystem</findItem>
      <findItem> : shipClass</findItem>
      <findItem>weaponSystem::new</findItem>
      <findItem>(R)</findItem>
      <findItem>(L)</findItem>
      <findItem>F(N)</findItem>
      <findItem>F/S/R</findItem>
      <findItem>F/S(</findItem>
      <findItem>+	</findItem>
      <findItem>r]</findItem>
      <findItem>s(</findItem>
      <findItem>f(</findItem>
      <findItem>F/S</findItem>
      <findItem>	1	</findItem>
    </findItem-list>
    <findWhatKey-list>
      <findWhatKey>%s.png"</findWhatKey>
      <findWhatKey>%s.bmp"</findWhatKey>
      <findWhatKey>resetNames() :-usedNameList := [],shipCount := 0.</findWhatKey>
      <findWhatKey>.bmp</findWhatKey>
      <findWhatKey>resetNames() :-</findWhatKey>
      <findWhatKey></findWhatKey>
      <findWhatKey>usedNameList := [],</findWhatKey>
      <findWhatKey>shipCount := 0.</findWhatKey>
      <findWhatKey>venice_stat</findWhatKey>
      <findWhatKey>ship_venice</findWhatKey>
      <findWhatKey>newShip : () -&gt; ship. predicates resetNames : ().</findWhatKey>
      <findWhatKey>resetNames : ().</findWhatKey>
      <findWhatKey>shipClass::new(shipStats_var, special_var, weaponSystemList, Name).clauses    newShip() = Ship :-        New = new(),        Ship = ship::new(New).</findWhatKey>
      <findWhatKey>shipClass::new(shipStats_var, special_var, weaponSystemList, Name).</findWhatKey>
      <findWhatKey>phrHarpocrates</findWhatKey>
      <findWhatKey>phrHarpoverchargedrates</findWhatKey>
      <findWhatKey>calibre([cat_light])</findWhatKey>
      <findWhatKey>calibre(L)</findWhatKey>
      <findWhatKey>    getFleetBuilderStats() = fbs(ConstructorStats, special_var, { () = new() }) :-</findWhatKey>
      <findWhatKey>    getFleetBuilderStats() = fbs(ShipPoints, GroupSize, Tonnage, special_var, { () = new() }) :-</findWhatKey>
      <findWhatKey>ConstructorStats = getFleetBuilderStats(shipStats_var).</findWhatKey>
      <findWhatKey>getFleetBuilderStats(shipStats_var, ShipPoints, GroupSize, Tonnage).</findWhatKey>
      <findWhatKey>getFleetBuilderStats() = fbs</findWhatKey>
      <findWhatKey>getFleetBuilderStats = fbs</findWhatKey>
      <findWhatKey>getFleetBuilderStats : () -&gt; fleetBuilderStats.</findWhatKey>
      <findWhatKey>getFleetBuilderStats : (integer ShipPoints [out], group GroupSize [out], tonnage Tonnage [out], shipSpecial* Special [out]).</findWhatKey>
      <findWhatKey>getFleetBuilderStats = fbs(ShipPoints, GroupSize, Tonnage, special_var, {() = new()}) :-</findWhatKey>
      <findWhatKey>getFleetBuilderStats(ShipPoints, GroupSize, Tonnage, special_var) :-</findWhatKey>
      <findWhatKey>getFleetBuilderStats</findWhatKey>
      <findWhatKey>fleetBuilderStats</findWhatKey>
    </findWhatKey-list>
    <inFilesKey-list>
      <inFilesKey>*.i *.cl *.pro</inFilesKey>
      <inFilesKey>*.cl</inFilesKey>
      <inFilesKey>*.ph *.pack</inFilesKey>
      <inFilesKey>*.*</inFilesKey>
    </inFilesKey-list>
    <inFoldersKey-list>
      <inFoldersKey>C:\Users\Erik\Dropbox\Visual Prolog Projects\Dropfleet\ship\</inFoldersKey>
      <inFoldersKey>C:\Users\ejp\Dropbox\Visual Prolog Projects\Dropfleet\ship\shipClass\</inFoldersKey>
      <inFoldersKey>C:\Users\ejp\Dropbox\Visual Prolog Projects\Dropfleet\ship\</inFoldersKey>
      <inFoldersKey>C:\Users\Erik\Documents\Visual Prolog Projects\Dropfleet\ship\</inFoldersKey>
      <inFoldersKey></inFoldersKey>
    </inFoldersKey-list>
    <interDir-list>
      <interDir>obj</interDir>
    </interDir-list>
    <replaceItem-list>
      <replaceItem>Shaltari</replaceItem>
      <replaceItem>shaltari</replaceItem>
      <replaceItem>tuple</replaceItem>
      <replaceItem>group</replaceItem>
      <replaceItem>F</replaceItem>
      <replaceItem>V</replaceItem>
      <replaceItem>L</replaceItem>
      <replaceItem>phrHarpocrates</replaceItem>
      <replaceItem>, overcharged</replaceItem>
      <replaceItem>overcharged</replaceItem>
      <replaceItem>ship_venice</replaceItem>
      <replaceItem>/</replaceItem>
      <replaceItem>ucm</replaceItem>
      <replaceItem>fighter_stats</replaceItem>
      <replaceItem>bomber_stats</replaceItem>
      <replaceItem>strikeCraftLaunchSystem</replaceItem>
      <replaceItem>torpedoLaunchSystem</replaceItem>
      <replaceItem>ShipSpecial</replaceItem>
      <replaceItem>(right)</replaceItem>
      <replaceItem>(left)</replaceItem>
      <replaceItem>[front(narrow)</replaceItem>
      <replaceItem>[front(), side(), rear</replaceItem>
      <replaceItem>[front(), side(</replaceItem>
      <replaceItem>,p), i(</replaceItem>
      <replaceItem>rear]</replaceItem>
      <replaceItem>side(</replaceItem>
      <replaceItem>front(</replaceItem>
      <replaceItem>[f(),s()</replaceItem>
      <replaceItem>[f(),s(</replaceItem>
      <replaceItem>i(1),</replaceItem>
    </replaceItem-list>
  </historic-map>
  <setting-map platform="Win32" readmeopen="true" resupdate="21:02:54-2.3.2022" />
  <window-list>
    <window-map filename="main.pack" kind="Editor" line="16" opened="true" pos="1" x1="870" x2="2560" y1="0" y2="1305" />
    <window-map filename="taskWindow\taskWindow.ph" kind="Editor" line="1" opened="true" pos="1" x1="870" x2="2560" y1="0" y2="1305" />
    <window-map filename="taskWindow\taskWindow.pack" kind="Editor" line="14" opened="true" pos="24" x1="870" x2="2560" y1="0" y2="1305" />
    <window-map filename="taskWindow\Toolbars\projectToolbar.pro" kind="Editor" line="15" opened="true" pos="10" x1="870" x2="2560" y1="0" y2="1305" />
    <window-map filename="resourceIdentifiers.i" kind="Editor" line="3" opened="true" pos="11" x1="870" x2="2560" y1="0" y2="1305" />
    <window-map filename="fleet\fleet.pro" kind="Editor" line="10" opened="true" pos="1" x1="870" x2="2560" y1="0" y2="1305" />
    <window-map filename="taskWindow\taskWindow.pro" kind="Editor" line="31" opened="true" pos="60" x1="870" x2="2560" y1="0" y2="1305" />
    <window-map filename="ship\shaltariEmerald\shaltariEmerald.cl" kind="Editor" line="12" opened="true" pos="50" x1="870" x2="2560" y1="0" y2="1305" />
    <window-map filename="ship\shipClass\shipClass.i" kind="Editor" line="80" opened="true" pos="21" x1="870" x2="2560" y1="0" y2="1305" />
    <window-map filename="fleet\fleetBuilder\fleetBuilder.pro" kind="Editor" line="28" opened="true" pos="60" x1="870" x2="2560" y1="0" y2="1305" />
  </window-list>
</environment-map>